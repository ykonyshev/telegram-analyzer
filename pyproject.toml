[tool.poetry]
name = "telegram-analysis"
version = "0.1.0"
description = ""
authors = ["Your Name <you@example.com>"]
readme = "README.md"
packages = [{include = "telegram_analysis"}]

[tool.poetry.dependencies]
python = ">=3.10,<3.12"
telethon = "^1.27.0"
beanie = "^1.17.0"
numpy = "^1.23.0"
pandas = "^1.5.3"
seaborn = "^0.12.2"
matplotlib = "^3.6.3"
tqdm = "^4.64.1"
statsmodels = "^0.13.5"
aiofiles = "^23.1.0"
cryptg = "^0.4.0"
fastapi = "^0.92.0"
uvicorn = "^0.20.0"
grpcio = "^1.51.3"
grpcio-tools = "^1.51.3"
setuptools-rust = {version = "^1.5.2", extras = ["processing"]}
llvmlite = {version = "^0.39.1", extras = ["processing"]}
numba = {version = "^0.56.4", extras = ["processing"]}
openai-whisper = {version = "^20230308", extras = ["processing"]}
langdetect = "^1.0.9"


[tool.poetry.group.dev.dependencies]
pandas-stubs = "^1.5.3.230214"
ruff = "^0.0.254"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 88
force-exclude = true
exclude = [
    "proto"
]

select = ["A", "B", "C", "E", "F", "B", "I", "ANN", "E", "C90", "C4", "SLF", "SIM", "ERA", "PL", "PLE", "TRY"]
ignore = [
    "ANN101", # self typing in classes
    "ANN102", # cls typing to @classmethod
    "TRY003", # long exception messages
    "A003", # class attribute shadowing
    "B905", # zip() without strict=
    "I001", # unsorted imports
    "PLR0913" # too many function arguments
]

[tool.ruff.mccabe]
max-complexity = 10

[tool.pyright]
include = ["src"]
exclude = [
    "**/node_modules",
    "**/__pycache__",
]

ignore = ["**/proto"]

reportMissingImports = true
strictListInference = true
strictDictionaryInference = true
reportMissingParameterType = true
strictSetInference = true
reportMissingTypeStubs = false
